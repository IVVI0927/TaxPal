import { PDFDocument, StandardFonts, rgb } from 'pdf-lib'
import type { FormData } from '@/types/form'

export async function generatePDF(formData: FormData): Promise<Blob> {
  // Create a new PDF document
  const pdfDoc = await PDFDocument.create()
  const page = pdfDoc.addPage([612, 792]) // US Letter size
  const { width, height } = page.getSize()
  const font = await pdfDoc.embedFont(StandardFonts.Helvetica)
  const fontSize = 12

  // Add title
  page.drawText('Form 8843', {
    x: 50,
    y: height - 50,
    size: 20,
    font,
    color: rgb(0, 0, 0)
  })

  // Add form fields
  const fields = [
    { label: 'Name:', value: formData.name, y: height - 100 },
    { label: 'Passport Number:', value: formData.passport, y: height - 130 },
    { label: 'Country of Citizenship:', value: formData.citizenship, y: height - 160 },
    { label: 'U.S. Address:', value: formData.usAddress, y: height - 190 },
    { label: 'Date of Entry:', value: formData.entryDate, y: height - 220 },
    { label: 'Visa Type:', value: formData.visaType, y: height - 250 },
    { label: 'SEVIS ID:', value: formData.sevis, y: height - 280 },
    { label: 'School Name:', value: formData.school, y: height - 310 },
    { label: 'School Address:', value: formData.schoolAddress, y: height - 340 }
  ]

  fields.forEach(({ label, value, y }) => {
    page.drawText(label, {
      x: 50,
      y,
      size: fontSize,
      font,
      color: rgb(0, 0, 0)
    })

    page.drawText(value, {
      x: 200,
      y,
      size: fontSize,
      font,
      color: rgb(0, 0, 0)
    })
  })

  // Add footer
  page.drawText('Generated by TaxPal', {
    x: 50,
    y: 50,
    size: 10,
    font,
    color: rgb(0.5, 0.5, 0.5)
  })

  // Save the PDF
  const pdfBytes = await pdfDoc.save()
  return new Blob([pdfBytes], { type: 'application/pdf' })
} 